== Video script for The basics

All level two sections will be their own video.

=== Numbers and math

One thing that programming languages are really good at is dealing with numbers. In fact, the first computer program ever written was for calculating a series of numbers called Bernoulli numbers. (Just so you know, that's a set of numbers that has to do with how air flows around objects) (link to video explaining that in the video)

Let's do a bit of math in Python. I'm in my shell, and I'm going to start throwing out some statements.

[source,python]
----
>>> 8 + 5
>>> 9 * 2
>>> 10 - 20
----

Notice how Python accepts some input from me and spits something back out? That's because we're in the shell. Right now, Python is like a live wire, just waiting for us to give it something to do. As soon as we give it something, it spits the results back out. In this case, we get numbers back.

These expressions should look pretty similar to what you see in math class. The only one that might seem weird is the fact that we're using an asterisk instead of an 'x' or a dot to multiply numbers.

Let's go over some common operators. An operator is a symbol like a plus sign or minus sign that lets Python know what we want to do with two pieces of information. Here's the ones you're most likely to use:

* The minus sign is just a minus sign. You can also use this to make a number negative.
* The plus sign is used for addition.
* The forward slash is used for division. There are two slashes on your keyboard, so make sure you use the right one! The one you want is at the end of the bottom row of letters on your keyboard, after the period.
* The asterisk is used to multiply. The asterisk symbol is above the eight on your keyboard.
* If you want to do powers, you use two asterisks together.

==== Data types

What happens if we divide one by two? You'd expect 0.5, but we get a zero! That's because we gave Python two whole numbers. In Python, those are called *integers*.

The other kind of number you'll probably need to use is called a float. You might know this as a "decimal" number. Any number with a decimal in it is considered a float, even if there's just a zero after the decimal! So, 5.0 is a float, even though it's identical to just a plain old five.

When you have an expression that just has integers in it, Python assumes you want an integer back. 

=== Storing values

So far, we've just been typing in numbers and getting numbers back. That would be fine if all we wanted was a calculator, but what if we want something more? What if we wanted to save a value for later? To do that, we need to create a variable.

To create a variable, we need to give it a name and a value to hold. We do that using the equals sign. 

[code,python]
----
>>> num = 5
----

After you store a value in a variable, you can get it

